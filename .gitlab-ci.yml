stages:
  - build
  - test
  - release
  - deploy

build-job:
  stage: build
  script:
    - echo "Creating virtual environment for the project..."
    - pip3 install virtualenv 
    - virtualenv $(pwd)/venv
    - source $(pwd)/venv/bin/activate
    - echo "Installing requirements..."
    - pip install -r requirements.txt
    - deactivate
  artifacts:
    paths:
      - venv
  cache:
    paths:
      - venv/

test-job:
  stage: test
  script:
    - source venv/bin/activate
    - python manage.py test price_aggregator
    - deactivate

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID

release-job:
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
  after_script:
    - docker logout

deploy-job:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY proxmox@192.168.0.137 "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker run -d -p 5000:8000 $CONTAINER_IMAGE"
